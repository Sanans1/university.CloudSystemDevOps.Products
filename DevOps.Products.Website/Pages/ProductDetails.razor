@page "/products/{ProductID}"
@using DevOps.Products.Website.Models.ViewModels
@using DevOps.Products.Website.Services.Interfaces.Pages
@using Microsoft.AspNetCore.Components
@using DevOps.Products.Website.States
@inject IProductDetailsService ProductDetailsService

<h1>Products</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (_productDetailsState == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Name</th>
				<th>Category</th>
				<th>Brand</th>
				<th>Description</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>@_productDetailsState.Product.Name</td>
				<td>@_productDetailsState.Product.CategoryName</td>
				<td>@_productDetailsState.Product.BrandName</td>
				<td>@_productDetailsState.Product.Description</td>
			</tr>
		</tbody>
	</table>
	@if (!_productDetailsState.Reviews.Any())
	{
		<p><em>No Reviews yet!</em></p>
	}
	else
	{
		<table class="table">
			<thead>
				<tr>
					<th>Customer</th>
					<th>Text</th>
					<th>Rating</th>
				</tr>
			</thead>
			<tbody>
				@foreach (ReviewViewModel review in _productDetailsState.Reviews)
				{
					<tr>
						<td>@review.Customer.Name</td>
						<td>@review.Text</td>
						<td>@review.Rating</td>
					</tr>
				}
			</tbody>
		</table>
	}

	<EditForm Model="@_productDetailsState.ReviewForm" OnValidSubmit="@SubmitReview">
		<DataAnnotationsValidator/>
		<ValidationSummary/>

		<InputNumber @bind-Value="_productDetailsState.ReviewForm.Rating" placeholder="Add a rating..."/>
		<InputText @bind-Value="_productDetailsState.ReviewForm.Text" placeholder="Write a review..."/>
		<button type="submit">Submit</button>
	</EditForm>
}

@code {
	private ProductDetailsState _productDetailsState;

	[Parameter]
	public string ProductID { get; set; }

	protected override async Task OnInitializedAsync()
	{
		_productDetailsState = await ProductDetailsService.GetProductDetailsViewModelAsync(int.Parse(ProductID));
	}

	private async void SubmitReview()
	{
		_productDetailsState.Reviews.Add(await ProductDetailsService.SubmitReview(_productDetailsState.ReviewForm));
		_productDetailsState.ReviewForm.Rating = 0;
		_productDetailsState.ReviewForm.Text = null;
		this.StateHasChanged();
	}
}

